#
# see http://schemaspy.org/dbtypes.html
# for configuration / customization details
#
description=Ingres
driver=com.ingres.jdbc.IngresDriver
connectionSpec=jdbc:ingres://<hostOptionalPort>/<db>
#
# Until we have a better list of tables to analyse and to save time we filter tables as follows:
# select tables that are not hidden
# and have a description
# and have a column with a prefix _no
# and have an obvious primary key (column named as the table with suffix _no)
# and whose name is just 4 letters
#
landmark.selectTablesSql=select distinct trim(dt.table_name) as table_name, table_description as table_comment from dict_tables dt left join dict_columns dc on dt.table_name = dc.table_name
 #where dt.table_name in ('salesareas','ddes','sales_group','advt_buyer','itv_role_sare','next_break_programme','trading_group','deal_text','eddi_spot_budget','aggr','client_mail_read','ldw_znno','ccpy','prog_prgc_xref','sapo','chan','pgcl','ldw_posn','spot_flags','dtrc','spib','itvdata__itv_mail_asgn','spsp','camp_ddes','cmmp','zz_authorities','resv','aval','cdpl2','ztxt','itvdata__itv_demo_ctrl','itv_demo_ctrl','sare_xref','itv_buyr_mail_addr','deal_name','camp_multipart','bkpg','trsa','date','ddpd1','itvdata__itv_demo','sprg','schg','itv_mail_mger','pspn_latest','itvdata__itv_spib','shis','spot_mail_read','prgc','multipart_element','prgo','sysp','dcdp_names','lefa','ldw_eddi_spot','itvdata__ldw_link_group','cdpl','demd','cmbp','itvdata__itv_univ_cpts','brac','ldw_link_camp','itvdata__ldw_link_camp','camp_text','ldw_eddi_camp','prgt','mail','itvdata__itv_univ_cptm','pers','agen','rsup','itvdata__itv_sare','cbst','deal','dcdp','rest','alsl','ddpd','prog','demo','clsh','schd','dlen','itv_sare','actr_nlin','spls_break_display','spls','dcdt','sare','advt','pred','ldw_eddi_requ','itvdata__itv_camp_univ','cpls','pspn','pres','invs','saoc','spot_mail','prow','posn','prod','cexc','saoc_posa_xref','session','brek','camp','spot','alt_sched','alt_sched_time','alt_sched_type')
landmark.selectColumnCommentsSql=select trim(table_name) as table_name, trim(column_name) as column_name, description as comments from dict_columns